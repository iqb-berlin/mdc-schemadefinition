<?xml version="1.0" encoding="utf-8"?>
<xs:schema 
	elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!-- für lang-Attribut -->
	<xs:import namespace="http://www.w3.org/XML/1998/namespace"
		schemaLocation="http://www.w3.org/2001/xml.xsd" />

	<xs:complexType name="MultiLanguageTextType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ definiert allgemein ein Element für Text, der über ein lang-Attribut einer Sprache
				zugeordnet ist.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="xml:lang" default="de" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="MetaDataType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MetaDataType legt die Speicherung einer einzelnen Information fest: Attribute cat und def. Der
				Inhalt (Value) dieses Elements ist abhängig vom Datentyp und kann xs:string sein oder eine
				Folge von Sub-Elementen.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent mixed="true">
			<xs:restriction base="xs:anyType">
				<xs:attribute name="cat" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Die Bezeichnung des Katalogs. Es handelt sich meist um eine Url zu einer Datei.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="def" type="xs:nonNegativeInteger" use="required">
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Die ID der Metadatendefinition innerhalb des Katalogs.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="MetaDataListType">
		<xs:annotation>
			<xs:documentation xml:lang="de">
				Dieser Typ legt eine Verwendung von Medatatendefinitionen in Datenobjekten fest.
				Da Kataloge und Metadatendefintionen selbst Datenobjekte sind, die Medatatendefinitionen
				verwenden, ist diese Verwendung hier zu definieren.
				MetaDataListType ist eine einfache Liste von MetaDataType.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MD" type="MetaDataType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

	<xs:element name="MDCat">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="Owner" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
				<xs:element name="License">
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attribute name="url" type="xs:string" use="optional"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="MDCatMetadata" type="MetaDataListType" minOccurs="0" maxOccurs="1"/>
				<xs:element name="MDDef" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Label" type="MultiLanguageTextType" minOccurs="1" maxOccurs="unbounded"/>
							<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="MDDefMetadata" type="MetaDataListType" minOccurs="0" maxOccurs="1"/>
							<xs:element name="TypeSpec" minOccurs="0" maxOccurs="1">
								<xs:annotation>
									<xs:documentation xml:lang="de">
										Diese Daten liefern optionale ergänzende Festlegungen zum Datentyp.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:all>
										<xs:element name="Min" type="xs:string" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für Text-Datentyp: Legt minimale Länge fest (integer)
													Für numerische Datentypen: Legt minimalen Wert fest
													Für Datum: "today" als minimal heutiges Datum
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Max" type="xs:string" minOccurs="0" maxOccurs="1"/>
										<xs:element name="Languages" type="xs:string" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für Text-Datentyp: Grenzt zulässige Sprachen ein
													Beispiel: "de en"
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Digits" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für Datentyp decimal: Anzahl Kommastellen
													Standardwert 2
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="MultiLineText" type="xs:boolean" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für Text-Datentyp: Legt fest, ob mehrzeilig "true";
													Standardwert "false"
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="Seconds" type="xs:boolean" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für integer-Datentyp: Legt bei "true" fest, dass Wert als
													Sekunden interpretiert werden soll und eine Darstellung
													"mm:ss" in der UI verwendet werden soll.
													Standardwert "false"
												</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="ListControl" minOccurs="0" maxOccurs="1">
											<xs:annotation>
												<xs:documentation xml:lang="de">
													Für list-Datentypen: Legt fest, wie die Liste dargestellt
													werden soll durch die Anwendung
												</xs:documentation>
											</xs:annotation>
											<xs:simpleType>
												<xs:restriction base="xs:string">
													<xs:enumeration value="list">
														<xs:annotation>
															<xs:documentation xml:lang="de">
																Werte im Container untereinander
															</xs:documentation>
														</xs:annotation>
													</xs:enumeration>
													<xs:enumeration value="float">
														<xs:annotation>
															<xs:documentation xml:lang="de">
																Werte im Container fließend mit Umbruch
															</xs:documentation>
														</xs:annotation>
													</xs:enumeration>
													<xs:enumeration value="combobox">
														<xs:annotation>
															<xs:documentation xml:lang="de">
																Eine Zeile zum Ausklappen
															</xs:documentation>
														</xs:annotation>
													</xs:enumeration>
													<xs:enumeration value="expandable">
														<xs:annotation>
															<xs:documentation xml:lang="de">
																UI-Vorschlag: Werte im Container fließend, aber nicht immer
																alle dargestellt, sondern erst bei Klick auf Button (günstig bei
																hoher Anzahl von Listenwerten)
															</xs:documentation>
														</xs:annotation>
													</xs:enumeration>
												</xs:restriction>
											</xs:simpleType>
										</xs:element>
									</xs:all>
								</xs:complexType>
							</xs:element>
							<xs:element name="DefaultValue" type="xs:string" minOccurs="0" maxOccurs="1"/>
							<xs:element name="Value" minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation xml:lang="de">
										Eine Liste von Value-Elementen wird verwendet, wenn es sich um ein
										Vokabular handelt (Liste oder Taxonomie). Dann muss zumindest ein
										Label-Element definiert sein. Die Liste kann auch für ein Metadatenset
										verwendet werden. Dann ist das id-Attribut jeweils ein Verweis auf eine
										Metadatendefinition desselben Katalogs.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Label" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
										<xs:element name="Description" type="MultiLanguageTextType" minOccurs="0" maxOccurs="unbounded"/>
									</xs:sequence>
									<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
									<xs:attribute name="taxpos" use="optional">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Das taxpos-Attribut ist nur bei Taxonomien verwendet und kennzeichnet
												die Position. Die erste Zahl definiert die Position in der ersten
												Ebene, die zweite Zahl die Position in der zweiten Ebene usw.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:pattern
														value="(0|[1-9][0-9]*)(\.(0|[1-9][0-9]*))*"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="id" type="xs:nonNegativeInteger" use="required"/>
						<xs:attribute name="type" use="optional">
							<xs:annotation>
								<xs:documentation xml:lang="de">
									Wenn das type-Attribut fehlt, dann muss über MDDefMetadata festgelegt
									werden, wie die Metadatendefintion genutzt werden soll. Dies ist für
									den Test von späteren Erweiterungen der type-Liste gedacht.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction base="xs:string">
									<xs:enumeration value="integer" />
									<xs:enumeration value="decimal">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												decimal; über TypeSpec/Digits (s. o.) kann die gewünschte Anzahl
												Kommastellen angegeben werden.
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="textde">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Einfaches Textfeld, im Zweifel in deutsch.
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="textmultilang">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Hat bei der Verwendung im Datenobjekt den Wert nicht direkt als
												Element-Value gespeichert, sondern als Liste von V-Elementen
												vom Typ MultiLanguageTextType
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="date" />
									<xs:enumeration value="filelink" />
									<xs:enumeration value="folderlink" />
									<xs:enumeration value="boolean" />
									<xs:enumeration value="listsingleselect">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Wortliste, nur eine Auswahl möglich
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="listmultiselect">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Wortliste, mehrfache Auswahl möglich
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="metadataset">
										<xs:annotation>
											<xs:documentation xml:lang="de">
												Es handelt sich um eine Kombination von Metadaten. Die Liste mit
												Value-Elementen ist dann als Aufzählung der Metadaten-Defintionen
												dieses Sets zu interpretieren.
											</xs:documentation>
										</xs:annotation>
									</xs:enumeration>
									<xs:enumeration value="taxonomy" />
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
					</xs:complexType>
					<xs:unique name="MDDefLabelLanguageUnique">
						<xs:selector xpath="Label"/>
						<xs:field xpath="@xml:lang"/>
					</xs:unique>
					<xs:unique name="MDDefDescriptionLanguageUnique">
						<xs:selector xpath="Description"/>
						<xs:field xpath="@xml:lang"/>
					</xs:unique>
					<xs:unique name="MDDefValueIdUnique">
						<xs:selector xpath="Value"/>
						<xs:field xpath="@id"/>
					</xs:unique>
				</xs:element>
			</xs:sequence>
			<xs:attribute name="id" type="xs:string" use="required"/>
			<xs:attribute name="version" use="required">
				<xs:simpleType>
					<xs:annotation>
						<xs:documentation xml:lang="de">
							Das version-Attribut des Katalogs folgt der SemVer-Notation. Es ist darauf zu achten,
							dass bei der Veröffentlichung des Katalogs die URL auch dieselbe Version enthält.
						</xs:documentation>
					</xs:annotation>
					<xs:restriction base="xs:string">
						<xs:pattern
							value="(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(\-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="versionhistory" type="xs:string">
				<xs:annotation>
					<xs:documentation xml:lang="de">
						Das versionhistory-Attribut des Katalogs verweist auf eine XML-Datei, die die Änderungen der Versionen
						dokumentiert ist. Es kann sich um eine url handeln oder um eine DOI (dann Präfix "doi:" setzen!). Siehe
						hierzu gesonderte Dokumentation.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
		<xs:unique name="MDCatLabelLanguageUnique">
			<xs:selector xpath="Label"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDCatDescriptionLanguageUnique">
			<xs:selector xpath="Description"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDCatOwnerLanguageUnique">
			<xs:selector xpath="Owner"/>
			<xs:field xpath="@xml:lang"/>
		</xs:unique>
		<xs:unique name="MDDefIdUnique">
			<xs:selector xpath="MDDef"/>
			<xs:field xpath="@id"/>
		</xs:unique>
	</xs:element>
</xs:schema>
